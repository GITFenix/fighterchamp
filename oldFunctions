    private function countRecordClub(Club $club): array
    {
        $win = $draw = $lose = 0;

        foreach ($club->getUsers() as $user){
            foreach ($user->getUserFights() as $userFight){
                if (($userFight->getFight())->getWinner()){
                    if($user == ($userFight->getFight()->getWinner()))
                    {
                        $win++;
                    }else{
                        $lose++;
                    }
                }elseif (($userFight->getFight())->getDraw()){
                    $draw++;
                }

            }
        }

        return ['W' => $win, 'D' => $draw, 'L' => $lose];
    }


update user_fight
join fight f ON user_fight.fight_id = f.id
set user_fight.is_winner = true
where f.winner_id = user_fight.user_id

    public function findAllByType(int $type = null)
    {
        $conn = $this->getEntityManager()
            ->getConnection();

        $queryType = $type ? 'WHERE us.type =' . $type : null;

        $sql = "SELECT CONCAT('/ludzie/',us.id) as _self, us.surname, us.name, if(us.male,'M','K') as male
            ,TIMESTAMPDIFF(YEAR, us.birth_day, CURDATE()) AS age
          ,sum(case when uf.result = 'win' then 1 else 0 end) as win
          ,sum(case when uf.result = 'draw' then 1 else 0 end) AS draw
          ,sum(case when uf.result = 'lose' or uf.result = 'disqalify' then 1 else 0 end) as lose
            ,CONCAT('/kluby/', c.id) as club_url, c.name as club_name
        FROM user as us
            LEFT JOIN user_fight AS uf ON uf.user_id = us.id
            LEFT JOIN fight as f ON f.id = uf.fight_id
            LEFT JOIN club c ON us.club_id = c.id " .$queryType. ' group by us.id';

        $stmt = $conn->prepare($sql);
        $stmt->execute();

        return $stmt->fetchAll();
    }


      public function findAllArray()
      {
          $conn = $this->getEntityManager()
              ->getConnection();



          $sql = 'SELECT us.surname, us.name, if(us.male,\'M\',\'K\') as male, uf.is_winner, if(f.is_draw,TRUE, FALSE) as is_draw, uf.is_disqualified, uf.is_red_corner
  	,TIMESTAMPDIFF(YEAR, us.birth_day, CURDATE()) AS age,CONCAT(\'/kluby/\', c.id) club_url,CONCAT(\'/walki/\', f.id) as _self, CONCAT(\'/ludzie/\',us.id) user_url, f.youtube_id, c.name as club_name,
  (select count(*) FROM user_fight WHERE uf.user_id = user_fight.user_id and user_fight.is_winner is true) as win,
  (select count(*) FROM user_fight JOIN fight f1 ON user_fight.fight_id = f1.id WHERE uf.user_id = user_fight.user_id and user_fight.is_winner is not true and f1.is_draw is false) as lose,
  (select count(*) FROM user_fight JOIN fight f2 ON user_fight.fight_id = f2.id WHERE uf.user_id = user_fight.user_id and f2.is_draw is true) as draw
     FROM user_fight uf
     JOIN user us ON uf.user_id = us.id
     LEFT JOIN club c ON us.club_id = c.id
     JOIN fight f ON uf.fight_id = f.id
     GROUP BY uf.id
     ORDER BY f.id
  ';
          $stmt = $conn->prepare($sql);
          $stmt->execute();

          return $stmt->fetchAll();
      }

         public function findAllOrderByNumberOfUsers()
          {
              $conn = $this->getEntityManager()->getConnection();

              $sql = "SELECT CONCAT('/kluby/', c.id) as _self, c.name , count(DISTINCT(us.id)) as user_count
                ,sum(case when uf.result = 'win' then 1 else 0 end) as win
                ,sum(case when uf.result = 'draw' then 1 else 0 end) AS draw
                ,sum(case when uf.result = 'lose' or uf.result = 'disqalify' then 1 else 0 end) as lose
      FROM user as us
        LEFT JOIN user_fight AS uf ON uf.user_id = us.id
        LEFT JOIN fight as f ON f.id = uf.fight_id
        JOIN club c ON us.club_id = c.id
      GROUP BY c.id";

              $stmt = $conn->prepare($sql);
              $stmt->execute();

              return $stmt->fetchAll();

          }